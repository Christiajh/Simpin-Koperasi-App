/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.security.Timestamp;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.mariadb.jdbc.Connection;
import repository.TodoRepo;
import util.DBUtil;

// author Team Simpin :Christian Hutahaean,Elkana Sitorus,Lola Tampubolon,Marshall Manurung,Ruth Manurung

public class Simpanan extends javax.swing.JFrame {

    private boolean isEnglish = false;
    private List<Object[]> cachedData = null;
    private int jumlahAnggota;
    public Simpanan() {
        initComponents();
         clouddata();
          setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundedpanel1 = new aplikasi.simpin.component.roundedpanel();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        panelCover1 = new aplikasi.simpin.component.PanelCover();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        roundedpanel2 = new aplikasi.simpin.component.roundedpanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        javax.swing.GroupLayout roundedpanel1Layout = new javax.swing.GroupLayout(roundedpanel1);
        roundedpanel1.setLayout(roundedpanel1Layout);
        roundedpanel1Layout.setHorizontalGroup(
            roundedpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );
        roundedpanel1Layout.setVerticalGroup(
            roundedpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
        );

        jTextField3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasi/simpin/assets/1-removebg-preview (1).png"))); // NOI18N
        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelCover1.setPreferredSize(new java.awt.Dimension(800, 500));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Id Anggota", "Nama Anggota", "Jenis Simpanan", "Jumlah", "Tanggal", "Bulan", "Tahun"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        roundedpanel2.setRoundBottomLeft(15);
        roundedpanel2.setRoundBottomright(15);
        roundedpanel2.setRoundTopLeft(15);
        roundedpanel2.setRoundTopRight(15);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("ID Anggota");

        jTextField2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Nama Anggota");

        jTextField6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Jenis Simpanan");

        jComboBox1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Simpanan Pokok", "Simpanan Wajib", "Simpanan Sukarela" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Jumlah");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("-");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("-");

        jButton2.setBackground(new java.awt.Color(0, 121, 107));
        jButton2.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Tambah");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Tanggal");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Tahun");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Bulan");

        javax.swing.GroupLayout roundedpanel2Layout = new javax.swing.GroupLayout(roundedpanel2);
        roundedpanel2.setLayout(roundedpanel2Layout);
        roundedpanel2Layout.setHorizontalGroup(
            roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedpanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, 220, Short.MAX_VALUE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundedpanel2Layout.createSequentialGroup()
                        .addGroup(roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(roundedpanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedpanel2Layout.createSequentialGroup()
                                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(roundedpanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(40, 40, 40)))
                                .addGroup(roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(roundedpanel2Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        roundedpanel2Layout.setVerticalGroup(
            roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundedpanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundedpanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(41, 41, 41)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplikasi/simpin/assets/1-removebg-preview (1).png"))); // NOI18N

        jLabel9.setBackground(new java.awt.Color(0, 149, 117));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("SIMPANAN");

        jButton6.setBackground(new java.awt.Color(0, 121, 107));
        jButton6.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Cari");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(0, 121, 107));
        jButton7.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Hapus");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 121, 107));
        jButton8.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Edit");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 121, 107));
        jButton9.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Reset");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Berdasarkan NIK:");

        jButton1.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jButton1.setText("Kembali");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jButton3.setText("Ganti bahasa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jButton4.setText("Log Aktivitas");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        jButton5.setText("Download laporan");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCover1Layout = new javax.swing.GroupLayout(panelCover1);
        panelCover1.setLayout(panelCover1Layout);
        panelCover1Layout.setHorizontalGroup(
            panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCover1Layout.createSequentialGroup()
                .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCover1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCover1Layout.createSequentialGroup()
                        .addGap(0, 7, Short.MAX_VALUE)
                        .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCover1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(172, 172, 172))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCover1Layout.createSequentialGroup()
                                .addComponent(roundedpanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))))
                .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCover1Layout.createSequentialGroup()
                            .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(panelCover1Layout.createSequentialGroup()
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(14, 14, 14))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCover1Layout.createSequentialGroup()
                            .addComponent(jButton5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton3)))
                    .addComponent(jButton4))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        panelCover1Layout.setVerticalGroup(
            panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCover1Layout.createSequentialGroup()
                .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCover1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelCover1Layout.createSequentialGroup()
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton7)
                            .addComponent(jButton8)
                            .addComponent(jButton9))
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(roundedpanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelCover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton5)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelCover1, javax.swing.GroupLayout.PREFERRED_SIZE, 1179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCover1, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    try {
    // Ambil nilai dari field input
    int idAnggota = Integer.parseInt(jTextField2.getText().trim());  // ID Anggota
    String namaAnggota = jTextField4.getText().trim();               // Nama Anggota
    String jenisSimpanan = jComboBox1.getSelectedItem().toString();  // Jenis Simpanan
    double jumlah;
    int tanggal = Integer.parseInt(jTextField5.getText().trim());    // Tanggal
    int bulan = Integer.parseInt(jTextField10.getText().trim());     // Bulan
    String tahunInput = jTextField8.getText().trim();                // Tahun

    // Validasi apakah semua input sudah diisi
    if (jenisSimpanan.equalsIgnoreCase("Pilih")) {
        JOptionPane.showMessageDialog(this, "Jenis Simpanan belum dipilih", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (namaAnggota.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Nama Anggota harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Validasi input jumlah (harus double)
    try {
        jumlah = Double.parseDouble(jTextField6.getText().trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Jumlah harus berupa angka desimal (double)!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validasi tahun (harus 4 digit)
    if (tahunInput.length() != 4 || !tahunInput.matches("\\d{4}")) {
        JOptionPane.showMessageDialog(this, "Tahun harus terdiri dari 4 angka!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
        return;
    }
    int tahun = Integer.parseInt(tahunInput);

    // Validasi bulan (harus antara 1-12)
    if (bulan < 1 || bulan > 12) {
        JOptionPane.showMessageDialog(this, "Bulan harus antara 1 hingga 12!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Tentukan jumlah hari maksimum dalam bulan tersebut
    int maxHari;
    switch (bulan) {
        case 1: case 3: case 5: case 7: case 8: case 10: case 12:
            maxHari = 31;  // Januari, Maret, Mei, Juli, Agustus, Oktober, Desember memiliki 31 hari
            break;
        case 4: case 6: case 9: case 11:
            maxHari = 30;  // April, Juni, September, November memiliki 30 hari
            break;
        case 2:
            // Periksa apakah tahun adalah kabisat
            if ((tahun % 4 == 0 && tahun % 100 != 0) || (tahun % 400 == 0)) {
                maxHari = 29;  // Februari tahun kabisat
            } else {
                maxHari = 28;  // Februari tahun biasa
            }
            break;
        default:
            JOptionPane.showMessageDialog(this, "Bulan tidak valid!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
            return;
    }

    // Validasi tanggal apakah valid dalam bulan tersebut
    if (tanggal < 1 || tanggal > maxHari) {
        JOptionPane.showMessageDialog(this, 
            "Tanggal tidak valid untuk bulan " + bulan + " di tahun " + tahun + 
            ". Maksimum adalah " + maxHari + " hari.", 
            "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Tambahkan data ke database melalui TodoRepo
    TodoRepo repo = new TodoRepo();
    int insertResult = repo.addkan(idAnggota, namaAnggota, jenisSimpanan, jumlah, tanggal, bulan, tahun);

    // Cek apakah data berhasil ditambahkan
    if (insertResult <= 0) {
        JOptionPane.showMessageDialog(this, "Gagal menyimpan data ke database!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Tambahkan data baru ke tabel
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    int nomorUrut = model.getRowCount() + 1;  // Hitung nomor urut berdasarkan jumlah baris
    model.addRow(new Object[]{nomorUrut, idAnggota, namaAnggota, jenisSimpanan, jumlah, tanggal, bulan, tahun});

    // Mengatur semua kolom di JTable agar rata kiri
    DefaultTableCellRenderer leftRenderer = new DefaultTableCellRenderer();
    leftRenderer.setHorizontalAlignment(SwingConstants.LEFT);
    for (int i = 0; i < jTable1.getColumnCount(); i++) {
        jTable1.getColumnModel().getColumn(i).setCellRenderer(leftRenderer);
    }

    // Reset field input setelah berhasil menambahkan data
    jTextField2.setText("");  // Reset ID Anggota
    jTextField4.setText("");  // Reset Nama Anggota
    jTextField6.setText("");  // Reset Jumlah
    jTextField5.setText("");  // Reset Tanggal
    jTextField10.setText(""); // Reset Bulan
    jTextField8.setText("");  // Reset Tahun
    jComboBox1.setSelectedIndex(0);  // Reset pilihan jenis simpanan

    // Tampilkan pesan sukses
    JOptionPane.showMessageDialog(this, "Anggota berhasil didaftarkan", "Berhasil", JOptionPane.INFORMATION_MESSAGE);

} catch (NumberFormatException e) {
    // Tangani kesalahan jika input angka tidak valid (ID, Tanggal, atau Bulan)
    JOptionPane.showMessageDialog(this, "ID Anggota, Tanggal, dan Bulan harus berupa angka!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
}


                
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
          // Ambil nilai dari jTextField8
    String idAnggotaInput = jTextField7.getText().trim();

    // Cek apakah input kosong
    if (idAnggotaInput.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan ID anggota yang ingin dicari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Dapatkan model asli dari JTable
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Buat TableRowSorter untuk menyaring data di JTable
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    jTable1.setRowSorter(sorter);

    // Filter berdasarkan ID Anggota (kolom ke-2)
    RowFilter<DefaultTableModel, Object> rf = RowFilter.regexFilter("^" + idAnggotaInput + "$", 1); // 1 adalah indeks kolom kedua
    sorter.setRowFilter(rf);

    // Cek apakah ada hasil yang ditampilkan setelah filter
    if (sorter.getViewRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "ID anggota tidak ditemukan di tabel.", "Info", JOptionPane.INFORMATION_MESSAGE);
        // Reset filter agar menampilkan semua data kembali
        sorter.setRowFilter(null);
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       String idAnggotaInput = jTextField7.getText().trim();

if (idAnggotaInput.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Masukkan ID anggota yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
    return;
}

// Pastikan ID Anggota ada di database
TodoRepo repo = new TodoRepo();
int checkResult = repo.hapuslah(idAnggotaInput);  // Panggil fungsi hapuslah untuk cek keberadaan ID

if (checkResult == 1) {
    // Jika data ditemukan dan berhasil dihapus di database, hapus di JTable
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    boolean found = false;

    // Cari ID anggota di kolom ke-2 (indeks kolom ke-1)
    for (int i = 0; i < model.getRowCount(); i++) {
        String tableId = model.getValueAt(i, 1).toString().trim();  // Kolom ke-1 (indeks 1) adalah ID Anggota
        if (tableId.equals(idAnggotaInput)) {
            model.removeRow(i);  // Hapus baris dari tabel
            found = true;
            break;
        }
    }

    if (found) {
        jumlahAnggota = model.getRowCount();  // Update jumlah anggota di tabel
        JOptionPane.showMessageDialog(this, "Anggota telah dihapus dari data", "Berhasil", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "Anggota tidak ditemukan di tabel.", "Info", JOptionPane.INFORMATION_MESSAGE);
    }
} else {
    JOptionPane.showMessageDialog(this, "ID anggota tidak ditemukan di database.", "Error", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
 String idAnggotaInput = jTextField7.getText().trim(); // Ambil input dari JTextField8

// Cek apakah input kosong
if (idAnggotaInput.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Masukkan ID Anggota yang ingin dicari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
    return;
}

// Dapatkan model asli dari JTable
DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

// Buat TableRowSorter untuk menyaring data di JTable
TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
jTable1.setRowSorter(sorter);

// Filter berdasarkan ID Anggota (kolom kedua, indeks 1)
RowFilter<DefaultTableModel, Object> rf = RowFilter.regexFilter("^" + idAnggotaInput + "$", 1); // Indeks 1 untuk kolom kedua (Id Anggota)
sorter.setRowFilter(rf);

// Cek apakah ada hasil yang ditampilkan setelah filter
if (sorter.getViewRowCount() == 0) {
    JOptionPane.showMessageDialog(this, "ID Anggota tidak ditemukan di tabel.", "Info", JOptionPane.INFORMATION_MESSAGE);
    // Reset filter agar menampilkan semua data kembali
    sorter.setRowFilter(null);
    return;
}

// Jika ditemukan, ambil indeks baris yang sesuai dengan filter
int modelRowIndex = sorter.convertRowIndexToModel(0); // Ambil baris pertama yang cocok

// Ambil data dari baris yang cocok
String namaAnggota = model.getValueAt(modelRowIndex, 2).toString(); // Kolom Nama Anggota (indeks 2)
String jenisSimpanan = model.getValueAt(modelRowIndex, 3).toString(); // Kolom Jenis Simpanan (indeks 3)
String jumlah = model.getValueAt(modelRowIndex, 4).toString(); // Kolom Jumlah (indeks 4)
String tanggal = model.getValueAt(modelRowIndex, 5).toString(); // Kolom Tanggal (indeks 5)
String bulan = model.getValueAt(modelRowIndex, 6).toString(); // Kolom Bulan (indeks 6)
String tahun = model.getValueAt(modelRowIndex, 7).toString(); // Kolom Tahun (indeks 7)

// Tampilkan dialog untuk mengedit data
String newNamaAnggota = JOptionPane.showInputDialog(this, "Edit Nama Anggota:", namaAnggota);

// Dropdown untuk pilihan jenis simpanan
String[] jenisSimpananOptions = {"Simpanan Pokok", "Simpanan Wajib", "Simpanan Sukarela"};
String newJenisSimpanan = (String) JOptionPane.showInputDialog(this, "Pilih Jenis Simpanan:", 
                                                               "Edit Jenis Simpanan", JOptionPane.QUESTION_MESSAGE, 
                                                               null, jenisSimpananOptions, jenisSimpanan);

// Input data lain
String newJumlah = JOptionPane.showInputDialog(this, "Edit Jumlah:", jumlah);
String newTanggal = JOptionPane.showInputDialog(this, "Edit Tanggal:", tanggal);
String newBulan = JOptionPane.showInputDialog(this, "Edit Bulan:", bulan);

// Validasi input tahun agar harus 4 angka
String newTahun;
while (true) {
    newTahun = JOptionPane.showInputDialog(this, "Edit Tahun (4 digit):", tahun);
    if (newTahun != null && newTahun.matches("\\d{4}")) {
        break; // Jika input valid, keluar dari loop
    } else {
        JOptionPane.showMessageDialog(this, "Tahun harus terdiri dari 4 angka.", "Info", JOptionPane.INFORMATION_MESSAGE);
    }
}

// Update data di JTable jika pengguna tidak membatalkan input
if (newNamaAnggota != null && newJenisSimpanan != null && newJumlah != null && newTanggal != null && newBulan != null && newTahun != null) {
    model.setValueAt(newNamaAnggota, modelRowIndex, 2);     // Update kolom Nama Anggota
    model.setValueAt(newJenisSimpanan, modelRowIndex, 3);   // Update kolom Jenis Simpanan
    model.setValueAt(newJumlah, modelRowIndex, 4);          // Update kolom Jumlah
    model.setValueAt(newTanggal, modelRowIndex, 5);         // Update kolom Tanggal
    model.setValueAt(newBulan, modelRowIndex, 6);           // Update kolom Bulan
    model.setValueAt(newTahun, modelRowIndex, 7);           // Update kolom Tahun

    JOptionPane.showMessageDialog(this, "Data berhasil diperbarui.", "Info", JOptionPane.INFORMATION_MESSAGE);
}

// Reset filter untuk menampilkan semua data kembali
sorter.setRowFilter(null);


    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (jTable1.getRowSorter() != null) {
        // Reset filter agar semua data tampil kembali
        ((TableRowSorter<?>) jTable1.getRowSorter()).setRowFilter(null);
    } else {
        // Jika tidak menggunakan TableRowSorter, bisa langsung refresh model
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.fireTableDataChanged(); // Memastikan data tabel diperbarui
    }

   
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try {
    Dashboard dashboard = new Dashboard();
    dashboard.setVisible(true);  // Langsung tampilkan JFrame Dashboard
    this.dispose();              // Menutup JFrame saat ini
} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error membuka Dashboard: " + e.getMessage());
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      if (isEnglish) {
        // Set text labels for Indonesian
        jTextField2.setText("ID Anggota");
        jLabel4.setText("Nama Anggota");
        jLabel5.setText("Jenis Simpanan");
        jLabel6.setText("Jumlah");
        jLabel11.setText("Tanggal");
        jLabel13.setText("Bulan");
        jLabel13.setText("Tahun");
       jButton3.setText("Tambah");
        jButton1.setText("Kembali");
       jButton3.setText("Ganti bahasa");
         jButton2.setText("Tambah");
       jLabel2.setText("Berdasarkan ID:");
         jButton6.setText("Cari");
         jButton7.setText("Hapus");
         jButton8.setText("Ubah");
         jButton9.setText("Reset");
         jButton4.setText("Log Aktivitas");
         jButton5.setText("Download laporan");
     
         
        // Set table column headers for Indonesian
        jTable1.getColumnModel().getColumn(0).setHeaderValue("No");
        jTable1.getColumnModel().getColumn(1).setHeaderValue("Id Anggota");
        jTable1.getColumnModel().getColumn(2).setHeaderValue("Nama Anggota");
        jTable1.getColumnModel().getColumn(3).setHeaderValue("Jenis Simpanan");
        jTable1.getColumnModel().getColumn(4).setHeaderValue("Jumlah");
        jTable1.getColumnModel().getColumn(5).setHeaderValue("Tanggal");
        jTable1.getColumnModel().getColumn(6).setHeaderValue("Bulan");
        jTable1.getColumnModel().getColumn(7).setHeaderValue("Tahun");

    } else {
        // Set text labels for English
        jTextField2.setText("Member ID");
        jLabel4.setText("Member Name");
        jLabel5.setText("Type Deposit");
        jLabel6.setText("Total");
        jLabel11.setText("Date");
        jLabel13.setText("Month");
        jLabel13.setText("Year");
       jButton3.setText("Add");
        jButton1.setText("Back");
       jButton3.setText("Change languange");
         jButton2.setText("Add");
       jLabel2.setText("Based on ID");
         jButton6.setText("Search");
         jButton7.setText("Delete");
         jButton8.setText("Edit");
         jButton9.setText("Reset");
         jButton4.setText("Log Activity");
         jButton5.setText("Download report");
         

        // Set table column headers for English
             jTable1.getColumnModel().getColumn(0).setHeaderValue("No");
        jTable1.getColumnModel().getColumn(1).setHeaderValue("Member ID");
        jTable1.getColumnModel().getColumn(2).setHeaderValue("Member Name");
        jTable1.getColumnModel().getColumn(3).setHeaderValue("Type Deposit");
        jTable1.getColumnModel().getColumn(4).setHeaderValue("Total");
        jTable1.getColumnModel().getColumn(5).setHeaderValue("Date");
        jTable1.getColumnModel().getColumn(6).setHeaderValue("Month");
        jTable1.getColumnModel().getColumn(7).setHeaderValue("Year");
    }

    // Refresh the table header after changing the language
    jTable1.getTableHeader().repaint();

    // Toggle the language flag for next usage
    isEnglish = !isEnglish;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      String sql = "SELECT nama_anggota, jumlah, waktu FROM simpanan ORDER BY waktu ASC";  // Query SQL untuk mengambil data simpanan

try (Connection connection = (Connection) DBUtil.getConnection();
     PreparedStatement stmt = connection.prepareStatement(sql);
     ResultSet rs = stmt.executeQuery()) {

    StringBuilder messageBuilder = new StringBuilder("Daftar Simpanan Anggota:\n\n");
    double totalSimpanan = 0;  // Variabel untuk menghitung jumlah total simpanan

    // Mengolah hasil query
    while (rs.next()) {
        String nama = rs.getString("nama_anggota");  // Mengambil nama anggota
        double jumlah = rs.getDouble("jumlah");  // Mengambil jumlah simpanan
        java.sql.Timestamp timestamp = rs.getTimestamp("waktu");  // Mengambil waktu simpanan

        // Konversi timestamp ke LocalDateTime
        java.time.LocalDateTime waktu = timestamp.toLocalDateTime();

        // Format waktu ke HH:mm:ss
        String waktuFormatted = waktu.format(java.time.format.DateTimeFormatter.ofPattern("HH:mm:ss"));

        // Mengambil nama hari dalam bahasa Indonesia
        String namaHari = waktu.format(java.time.format.DateTimeFormatter.ofPattern("EEEE", new java.util.Locale("id", "ID")));

        // Menambahkan informasi simpanan dan waktu ke dalam message
        messageBuilder.append("Nama: ").append(nama).append("\n")
                      .append("Jumlah Simpanan: Rp ").append(String.format("%.2f", jumlah)).append("\n")
                      .append("Waktu: ").append(waktuFormatted).append(" (").append(namaHari).append(")\n\n");

        // Menambahkan jumlah simpanan ke total
        totalSimpanan += jumlah;
    }

    // Jika tidak ada simpanan yang terdaftar
    if (messageBuilder.toString().equals("Daftar Simpanan Anggota:\n\n")) {
        JOptionPane.showMessageDialog(null, "Tidak ada simpanan yang terdaftar.", "Info", JOptionPane.INFORMATION_MESSAGE);
    } else {
        // Menambahkan informasi total simpanan
        messageBuilder.append("Jumlah Total Simpanan: Rp ").append(String.format("%.2f", totalSimpanan)).append("\n");

        // Menampilkan pesan dalam bentuk card message
        JOptionPane.showMessageDialog(null, messageBuilder.toString(), "Informasi Simpanan Anggota", JOptionPane.INFORMATION_MESSAGE);
    }

} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat mengambil data.", "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
}


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
     String outputFile = "D:\\Data_Simpanan.pdf";

// Query untuk mengambil data simpanan
String sql = "SELECT * FROM simpanan";

try (Connection connection = (Connection) DBUtil.getConnection();
     PreparedStatement stmt = connection.prepareStatement(sql);
     ResultSet rs = stmt.executeQuery()) {

    // Membuat dokumen PDF
    Document document = new Document();
    PdfWriter.getInstance(document, new FileOutputStream(outputFile));

    // Membuka dokumen untuk menulis
    document.open();

    // Menulis judul dokumen dengan bold
    Font boldFont = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD);
    document.add(new Paragraph("Daftar Simpanan Anggota", boldFont));
    document.add(new Paragraph("========================================"));

    // Menulis data simpanan
    while (rs.next()) {
        int idAnggota = rs.getInt("id_anggota");
        String namaAnggota = rs.getString("nama_anggota");
        String jenisSimpanan = rs.getString("jenis_simpanan");
        double jumlah = rs.getDouble("jumlah");
        int tanggal = rs.getInt("tanggal");
        int bulan = rs.getInt("bulan");
        int tahun = rs.getInt("tahun");
        java.sql.Timestamp waktu = rs.getTimestamp("waktu");

        // Format tanggal (opsional, jika perlu format tertentu)
        String formattedDate = String.format("%02d-%02d-%d", tanggal, bulan, tahun);

        // Menambahkan data simpanan ke dalam dokumen PDF
        document.add(new Paragraph("ID Anggota: " + idAnggota));
        document.add(new Paragraph("Nama Anggota: " + namaAnggota));
        document.add(new Paragraph("Jenis Simpanan: " + jenisSimpanan));
        document.add(new Paragraph("Jumlah Simpanan: " + jumlah));
        document.add(new Paragraph("Tanggal: " + formattedDate));
        document.add(new Paragraph("Waktu: " + (waktu != null ? waktu.toString() : "Tidak ada data waktu")));
        document.add(new Paragraph("\n----------------------------------------\n"));
    }

    // Menutup dokumen PDF
    document.close();

    // Memberikan informasi kepada pengguna bahwa PDF telah dibuat
    JOptionPane.showMessageDialog(null, "Data simpanan berhasil diekspor ke PDF: " + outputFile,
                                  "Berhasil", JOptionPane.INFORMATION_MESSAGE);

} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat mengambil data.", "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
} catch (FileNotFoundException e) {
    JOptionPane.showMessageDialog(null, "File tidak ditemukan atau tidak dapat disimpan.", "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
} catch (DocumentException ex) {
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat membuat file PDF.", "Error", JOptionPane.ERROR_MESSAGE);
    ex.printStackTrace();
}

    
    }//GEN-LAST:event_jButton5ActionPerformed

    
/// method cloud data simpanan
    
       
  public void clouddata() {
     DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    
    // Create a left-alignment renderer
    DefaultTableCellRenderer leftAlignRenderer = new DefaultTableCellRenderer();
    leftAlignRenderer.setHorizontalAlignment(SwingConstants.LEFT);
    
    // Apply left alignment to all columns
    for (int i = 0; i < jTable1.getColumnCount(); i++) {
        jTable1.getColumnModel().getColumn(i).setCellRenderer(leftAlignRenderer);
    }

    // Reset the table data to avoid duplicate entries
    model.setRowCount(0);

    // Load data from database
    TodoRepo repo = new TodoRepo();
    repo.cloudkan(model);  // Assuming this method loads all members from DB into the table
  }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simpanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simpanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simpanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simpanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Simpanan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private aplikasi.simpin.component.PanelCover panelCover1;
    private aplikasi.simpin.component.roundedpanel roundedpanel1;
    private aplikasi.simpin.component.roundedpanel roundedpanel2;
    // End of variables declaration//GEN-END:variables
}
